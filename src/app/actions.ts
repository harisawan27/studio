
'use server';

import { generateExplanations } from '@/ai/flows/generate-explanations-from-upload';
import { generatePracticeQuestions } from '@/ai/flows/generate-practice-questions-from-upload';
import { generateRevisionPrompts } from '@/ai/flows/generate-revision-prompts';
import { summarizeUploadedContent } from '@/ai/flows/summarize-uploaded-content';

// This is a mock function. In a real application, you'd fetch this from your database.
const getMockContent = (id: string, type: 'summary' | 'explanations' | 'questions' | 'revision') => {
  return `This is mock content for document ${id} concerning ${type}. In a real app, this would be generated by an AI model. For example, for a biology chapter on photosynthesis, this section might contain a detailed breakdown of the chemical process, key terms, and their definitions. The AI would process the uploaded textbook page and generate this educational content.`;
}

export async function getSummary(id: string, content: string) {
  try {
    // In a real app, you might cache the result in Firestore
    const result = await summarizeUploadedContent({ content, language: 'english' });
    return result.summary;
  } catch (e) {
    console.error(e);
    return "Error generating summary. Please try again.";
  }
}

export async function getExplanations(id: string, content: string) {
  try {
    const result = await generateExplanations({ textbookContent: content, language: 'English' });
    return result.explanations;
  } catch (e) {
    console.error(e);
    return "Error generating explanations. Please try again.";
  }
}

export async function getPracticeQuestions(id: string, content: string) {
  try {
    const result = await generatePracticeQuestions({ content, language: 'English' });
    return result.questions;
  } catch (e) {
    console.error(e);
    return ["Error generating questions. Please try again."];
  }
}

export async function getRevisionPrompts(id: string, content: string) {
  try {
    const result = await generateRevisionPrompts({ text: content });
    return result.revisionPrompts;
  } catch (e) {
    console.error(e);
    return ["Error generating revision prompts. Please try again."];
  }
}
